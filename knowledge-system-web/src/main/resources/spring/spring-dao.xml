<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


        <bean  id="propertyConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:connections.properties</value>
                </list>
            </property>
        </bean>

    <!-- 主源配置 -->
        <bean  id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!--基本属性 url userName password-->
            <property name="driverClassName"  value="${master.driver}"/>
            <property name="url" value="${master.url}"/>
            <property name="username" value="${master.username}"/>
            <property name="password" value="${master.password}"/>

            <!--配置 初始化大小 最大 最小 -->
            <property name="initialSize" value="1"/>
            <property name="minIdle" value="30"/>
            <property name="maxActive" value="200"/>

            <!-- 获取配置等待超时连接时长-->
            <property name="maxWait" value="6000"/>

            <!-- 配置多久监测闲置的链接-->
            <property name="timeBetweenEvictionRunsMillis" value="60000"/>
            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000"/>
            <!-- 校验语句 -->
            <property name="validationQuery" value="SELECT 1 FROM SECKILL"/>
            <property name="testWhileIdle" value="true"/>
            <property name="testOnBorrow" value="false"/>
            <property name="testOnReturn" value="false"/>
            <!-- 配置监控统计拦截的filters -->
            <property name="filters" value="stat,slf4j"/>
        </bean>


    <!--动态数据源-->
    <bean id="dataSource" class="com.zcd.mapper.common.DynamicDataSource">
        <property name="targetDataSources">
                <map key-type="java.lang.String">
                    <entry value-ref="masterDataSource"  key="masterDataSource"/>
                </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"></property>
    </bean>


    <!--sqlSessionFactory配置-->
    <bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.zcd.entity"/>
        <property name="mapperLocations">
            <array>
                 <value>classpath*:mapper/*.xml</value>
            </array>
        </property>
    </bean>


    <!--mapper扫描-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.zcd.mapper"/>
    </bean>


    <!--spring 事物处理-->
    <bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>